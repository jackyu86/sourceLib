<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
    <context:annotation-config />
    <!-- Component scan to find all Spring components -->
    <context:component-scan base-package="com.caej.batch" />
    <!-- Data source - connect to a MySQL instance running on the local machine -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://10.2.215.169/test"/>
        <property name="username" value="root"/>
        <property name="password" value="Passw0rd"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- create job-meta tables automatically -->

    <!--<jdbc:initialize-database data-source="dataSource">-->
        <!--<jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql" />-->
        <!--<jdbc:script location="org/springframework/batch/core/schema-mysql.sql" />-->
    <!--</jdbc:initialize-database>-->

    <!-- Job Repository: used to persist the state of the batch job -->
    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
        <property name="transactionManager" ref="transactionManager" />
    </bean>
    <!-- Job Launcher: creates the job and the job state before launching it -->
    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>
    <!-- Reader bean for our simple CSV example -->
    <!--<bean id="archiveFileTasklet" class="com.caej.batch.tasklet.ArchiveProductImportFileTasklet" scope="step">-->
        <!--<property name="inputFile" value="#{jobParameters['inputFile']}" />-->
    <!--</bean>-->
</beans>