<?xml version="1.0" encoding="UTF-8"?>
<bean:beans xmlns="http://www.springframework.org/schema/batch"
            xmlns:bean="http://www.springframework.org/schema/beans"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/batch
http://www.springframework.org/schema/batch/spring-batch.xsd">

    <bean:import resource="applicationContext.xml" />

    <!-- Job信息的配置 -->
    <job id="caejWallet3Job">
        <step id="format02Step" next="format04Step">
            <tasklet ref = "format02">
            </tasklet>
        </step>

        <step id="format04Step" next="format05Step">
            <tasklet ref = "format04">
            </tasklet>
        </step>

        <step id="format05Step" next="format06Step">
            <tasklet ref = "format05">
            </tasklet>
        </step>

        <step id="format06Step" next="format07Step">
            <tasklet ref = "format06">
            </tasklet>
        </step>
        <step id="format07Step" next="accountConfirmStep">
            <tasklet ref = "format07">
            </tasklet>
        </step>
        <step id="accountConfirmStep" next="transactionConfirmStep">
            <tasklet>
                <chunk reader="accountConfirmReader" writer="accountConfirmWriter"
                       processor="accountConfirmProcessor" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="transactionConfirmStep" next="abonusStep">
            <tasklet>
                <chunk reader="transactionConfirmReader" writer="transactionConfirmWriter" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="abonusStep" next="accountReconStep">
            <tasklet>
                <chunk reader="abonusReader" writer="abonusWriter"
                       processor="abonusProcessor" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="accountReconStep" next="fundInfoStep">
            <tasklet>
                <chunk reader="accountReconReader" writer="accountReconWriter"
                       processor="accountReconProcessor" commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="fundInfoStep"  next="format04Step" >
            <tasklet>
                <chunk reader="fundInfoReader" writer="fundInfoWriter"
                       commit-interval="10">
                </chunk>
            </tasklet>
        </step>
        <step id="syncAccount">
            <tasklet ref = "syncAccount">
            </tasklet>
        </step>
    </job>




    <bean:bean id="format02"
               class="com.caej.batch.tasklet.DealImportFileTasklet" scope="step">
        <bean:property name="inputFile"
                   value="#{jobParameters['02FilePath']}" />
        <bean:property name="outFilePath"
                       value="#{jobParameters['outFilePath']}" />
    </bean:bean>

    <bean:bean id="format04"
               class="com.caej.batch.tasklet.DealImportFileTasklet" scope="step">
        <bean:property name="inputFile"
                       value="#{jobParameters['04FilePath']}" />
        <bean:property name="outFilePath"
                       value="#{jobParameters['outFilePath']}" />
    </bean:bean>

    <bean:bean id="format05"
               class="com.caej.batch.tasklet.DealImportFileTasklet" scope="step">
        <bean:property name="inputFile"
                       value="#{jobParameters['05FilePath']}" />
        <bean:property name="outFilePath"
                       value="#{jobParameters['outFilePath']}" />
    </bean:bean>

    <bean:bean id="format06"
               class="com.caej.batch.tasklet.DealImportFileTasklet" scope="step">
        <bean:property name="inputFile"
                       value="#{jobParameters['06FilePath']}" />
        <bean:property name="outFilePath"
                       value="#{jobParameters['outFilePath']}" />
    </bean:bean>

    <bean:bean id="format07"
               class="com.caej.batch.tasklet.DealImportFileTasklet" scope="step">
        <bean:property name="inputFile"
                       value="#{jobParameters['07FilePath']}" />
        <bean:property name="outFilePath"
                       value="#{jobParameters['outFilePath']}" />
    </bean:bean>

    <!-- 固定长文件的读信息的配置 -->
    <bean:bean id="accountConfirmReader"
               class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <bean:property name="resource"
                       value="file:#{jobParameters['accountConfirmFilePath']}" />
        <bean:property name="lineMapper">
            <bean:bean
                    class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="accountConfirmTokenizer" />
                <bean:property name="fieldSetMapper">
                    <bean:bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="bufAccountConfirm"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>


    <bean:bean id="transactionConfirmReader"
               class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <bean:property name="resource"
                       value="file:#{jobParameters['transactionConfirmFilePath']}" />
        <bean:property name="lineMapper">
            <bean:bean
                    class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="transactionConfirmTokenizer" />
                <bean:property name="fieldSetMapper">
                    <bean:bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="bufTransactionConfirm"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>

    <bean:bean id="abonusReader"
               class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <bean:property name="resource"
                       value="file:#{jobParameters['abonusFilePath']}" />
        <bean:property name="lineMapper">
            <bean:bean
                    class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="abonusTokenizer" />
                <bean:property name="fieldSetMapper">
                    <bean:bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="bufAbonus"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>

    <bean:bean id="accountReconReader"
               class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <bean:property name="resource"
                       value="file:#{jobParameters['accountReconFilePath']}" />
        <bean:property name="lineMapper">
            <bean:bean
                    class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="accountReconTokenizer" />
                <bean:property name="fieldSetMapper">
                    <bean:bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="bufAccountRecon"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>

    <bean:bean id="fundInfoReader"
               class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <bean:property name="resource"
                       value="file:#{jobParameters['fundInfoFilePath']}" />
        <bean:property name="lineMapper">
            <bean:bean
                    class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <bean:property name="lineTokenizer" ref="fundInfoTokenizer" />
                <bean:property name="fieldSetMapper">
                    <bean:bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <bean:property name="prototypeBeanName" value="bufFundDynamicInfo"/>
                    </bean:bean>
                </bean:property>
            </bean:bean>
        </bean:property>
    </bean:bean>

    <bean:bean id="DealImportFileTasklet" class="com.caej.batch.tasklet.DealImportFileTasklet" scope="step">
        <bean:property name="inputFile" value="#{jobParameters['ssssssssssss']}" />
    </bean:bean>

    <bean:bean id="bufAccountConfirm"
               class="com.caej.batch.model.BufAccountConfirm" scope="prototype" />
    <bean:bean id="bufAbonus"
               class="com.caej.batch.model.BufAbonus" scope="prototype" />
    <bean:bean id="bufAccountRecon"
               class="com.caej.batch.model.BufAccountRecon" scope="prototype" />
    <bean:bean id="bufFundDynamicInfo"
               class="com.caej.batch.model.BufFundDynamicInfo" scope="prototype" />
    <bean:bean id="bufTransactionConfirm"
               class="com.caej.batch.model.BufTransactionConfirm" scope="prototype" />



    <bean:bean id="accountConfirmTokenizer"
               class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <bean:property name="columns" value="1-24, 25-32, 33-36, 37-53, 54-62, 63-65, 66-77, 78-78, 79-98, 99-106, 107-112, 113-121, 122-122, 123-123, 124-153, 154-273, 274-274, 275-286, 287-294, 295-298, 299-315, 316-324, 325-384, 385-396, 397-397, 398-405, 406-" />
        <bean:property name="names" value="appSheetSerialNo,transactionCfmDate,returnCode,transactionAccountID,distributorCode,businessCode,tAAccountID,multiAcctFlag,tASerialNO,transactionDate,transactionTime,branchCode,fromTAFlag,certificateType,certificateNo,investorName,individualOrInstitution,accountAbbr,accountCardID,regionCode,targetTransactionAccountID,netNo,specification,customerNo,frozenCause,freezingDeadline,errorDetail" />
    </bean:bean>

    <bean:bean id="transactionConfirmTokenizer"
               class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <bean:property name="columns" value="1-24, 25-32, 33-35, 36-51, 52-67, 68-73, 74-74, 75-82, 83-88, 89-92, 93-109, 110-118, 119-134, 135-150, 151-153, 154-165, 166-185, 186-186, 187-191, 192-210, 211-214, 215-222, 223-232, 233-242, 243-249, 250-258, 259-282, 283-290, 291-300, 301-301, 302-309, 310-325, 326-327, 328-336, 337-352, 353-372, 373-432, 433-440, 441-449, 450-458, 459-475, 476-479, 480-480, 481-481, 482-497, 498-507, 508-523, 524-539, 540-546, 547-554, 555-555, 556-571, 572-578, 579-585, 586-601, 602-611, 612-627, 628-635, 636-645, 646-646, 647-647, 648-648, 649-649, 650-650, 651-658, 659-659, 660-665, 666-675, 676-680, 681-685, 686-686, 687-698, 699-700, 701-709, 710-721, 722-722, 723-742, 743-750, 751-758, 759-760, 761-772, 773-775, 776-776, 777-777, 778-785, 786-786, 787-826, 827-831, 832-832, 833-848, 849-850, 851-852, 853-857, 858-863, 864-879, 880-887, 888-894, 895-910, 911-926, 927-942, 943-958, 959-959, 960-979, 980-995, 996-996, 997-1012, 1013-1028, 1029-1044, 1045-1052, 1053-1068, 1069-1084, 1085-1144, 1145-1145, 1146-1161, 1162-1162, 1163-" />
        <bean:property name="names" value="appSheetSerialNo,transactionCfmDate,currencyType,confirmedVol,confirmedAmount,fundCode,largeRedemptionFlag,transactionDate,transactionTime,returnCode,transactionAccountID,distributorCode,applicationVol,applicationAmount,businessCode,tAAccountID,tASerialNO,businessFinishFlag,discountRateOfCommission,depositAcct,regionCode,downLoaddate,charge,agencyFee,nAV,branchCode,originalAppSheetNo,originalSubsDate,otherFee1,individualOrInstitution,redemptionDateInAdvance,stampDuty,validPeriod,rateFee,totalBackendLoad,originalSerialNo,specification,dateOfPeriodicSubs,targetDistributorCode,targetBranchCode,targetTransactionAccountID,targetRegionCode,transferDirection,defDividendMethod,dividendRatio,interest,volumeByInterest,interestTax,tradingPrice,freezingDeadline,frozenCause,tax,targetNAV,targetFundPrice,cfmVolOfTargetFund,minFee,otherFee2,originalAppDate,transferFee,fromTAFlag,shareClass,detailFlag,redemptionInAdvanceFlag,frozenMethod,originalCfmDate,redemptionReason,codeOfTargetFund,totalTransFee,varietyCodeOfPeriodicSubs,serialNoOfPeriodicSubs,rationType,targetTAAccountID,targetRegistrarCode,netNo,customerNo,targetShareType,rationProtocolNo,beginDateOfPeriodicSubs,endDateOfPeriodicSubs,sendDayOfPeriodicSubs,broker,salesPromotion,acceptMethod,forceRedemptionType,alternationDate,takeIncomeFlag,purposeOfPeSubs,frequencyOfPeSubs,periodSubTimeUnit,batchNumOfPeSubs,capitalMode,detailCapticalMode,backenloadDiscount,combineNum,refundAmount,salePercent,managerRealRatio,changeFee,recuperateFee,achievementPay,achievementCompen,sharesAdjustmentFlag,generalTASerialNO,undistributeMonetaryIncome,undistributeMonetaryIncomeFlag,breachFee,breachFeeBackToFund,punishFee,tradingMethod,changeAgencyFee,recuperateAgencyFee,errorDetail,largeBuyFlag,raiseInterest,feeCalculator,shareRegisterDate" />
    </bean:bean>

    <bean:bean id="abonusTokenizer"
               class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <bean:property name="columns" value="1-16, 17-24, 25-27, 28-43, 44-51, 52-67, 68-75, 76-91, 92-97, 98-105, 106-109, 110-126, 127-135, 136-138, 139-150, 151-166, 167-167, 168-186, 187-190, 191-198, 199-208, 209-218, 219-234, 235-241, 242-250, 251-260, 261-276, 277-277, 278-293, 294-313, 314-329, 330-345, 346-361, 362-362, 363-363, 364-373, 374-389, 390-390, 391-414, 415-430, 431-440" />
        <bean:property name="names" value="basisforCalculatingDividend,transactionCfmDate,currencyType,volOfDividendforReinvestment,dividentDate,dividendAmount,xRDate,confirmedAmount,fundCode,registrationDate,returnCode,transactionAccountID,distributorCode,businessCode,tAAccountID,dividendPerUnit,defDividendMethod,depositAcct,regionCode,downLoaddate,charge,agencyFee,totalFrozenVol,nAV,branchCode,otherFee1,otherFee2,individualOrInstitution,dividendRatio,tASerialNO,stampDuty,frozenBalance,transferFee,shareClass,feeCalculator,drawBonusUnit,frozenSharesforReinvest,dividendType,originalAppSheetNo,achievementPay,achievementCompen" />
    </bean:bean>

    <bean:bean id="accountReconTokenizer"
               class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <bean:property name="columns" value="1-16, 17-32, 33-40, 41-46, 47-63, 64-72, 73-84, 85-100, 101-109, 110-129, 130-145, 146-146, 147-147, 148-148, 149-156, 157-172, 173-173, 174-189, 190-190, 191-191" />
        <bean:property name="names" value="availableVol,totalVolOfDistributorInTA,transactionCfmDate,fundCode,transactionAccountID,distributorCode,tAAccountID,totalFrozenVol,branchCode,tASerialNO,totalBackendLoad,shareClass,detailFlag,accountStatus,shareRegisterDate,undistributeMonetaryIncome,undistributeMonetaryIncomeFlag,guaranteedAmount,sourceType,defDividendMethod" />
    </bean:bean>

    <bean:bean id="fundInfoTokenizer"
               class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
        <bean:property name="columns" value="1-40, 41-56, 57-62, 63-63, 64-70, 71-78, 79-79, 80-86, 87-87, 88-88, 89-89, 90-105, 106-108, 109-109, 110-110, 111-126, 127-142, 143-158, 159-174, 175-177, 178-193, 194-201, 202-217, 218-233, 234-241, 242-249, 250-252, 253-268, 269-284, 285-300, 301-316, 317-318, 319-321, 322-328, 329-335, 336-343, 344-351, 352-359, 360-375, 376-391, 392-407, 408-423, 424-439, 440-455, 456-471, 472-487, 488-503, 504-519, 520-535, 536-551, 552-567, 568-583, 584-584, 585-585, 586-586, 587-587, 588-595, 596-602, 603-610, 611-618, 619-619, 620-627, 628-628, 629-635, 636-643, 644-644, 645-660, 661-676, 677-692, 693-708, 709-724, 725-740, 741-756, 757-772, 773-773, 774-789, 790-790, 791-792, 793-822, 823-862, 863-902, 903-932, 933-945" />
        <bean:property name="names" value="fundName,totalFundVol,fundCode,fundStatus,nAV,updateDate,netValueType,accumulativeNAV,convertStatus,periodicStatus,transferAgencyStatus,fundSize,currencyType,announcFlag,defDividendMethod,instAppSubsAmnt,instAppSubsVol,minAmountByInst,minVolByInst,custodianCode,amountOfPeriodicSubs,dateOfPeriodicSubs,maxRedemptionVol,minAccountBalance,iPOStartDate,iPOEndDate,fundManagerCode,indiAppSubsVol,indiAppSubsAmount,minSubsVolByIndi,minSubsAmountByIndi,registrarCode,fundSponsor,tradingPrice,faceValue,dividentDate,registrationDate,xRDate,maxSubsVolByIndi,maxSubsAmountByIndi,maxSubsVolByInst,maxSubsAmountByInst,unitSubsVolByIndi,unitSubsAmountByIndi,unitSubsVolByInst,unitSubsAmountByInst,minBidsAmountByIndi,minBidsAmountByInst,minAppBidsAmountByIndi,minAppBidsAmountByInst,minRedemptionVol,minInterconvertVol,issueTypeByIndi,issueTypeByInst,subsType,collectFeeType,nextTradeDate,valueLine,totalDivident,fundIncome,fundIncomeFlag,yield,yieldFlag,guaranteedNAV,fundYearIncomeRate,fundYearIncomeRateFlag,indiMaxPurchase,instMaxPurchase,indiDayMaxSumBuy,instDayMaxSumBuy,indiDayMaxSumRedeem,instDayMaxSumRedeem,indiMaxRedeem,instMaxRedeem,fundDayIncomeFlag,fundDayIncome,allowBreachRedempt,fundType,fundTypeName,registrarName,fundManagerName,fundServerTel,fundInternetAddress" />
    </bean:bean>



    <bean:bean id="accountConfirmWriter" class="com.caej.batch.writer.AccountConfirmWriter" />
    <bean:bean id="abonusWriter" class="com.caej.batch.writer.AbonusWriter" />
    <bean:bean id="accountReconWriter" class="com.caej.batch.writer.AccountReconWriter" />
    <bean:bean id="fundInfoWriter" class="com.caej.batch.writer.FundDynamicInfoWriter" />
    <bean:bean id="transactionConfirmWriter" class="com.caej.batch.writer.TransactionConfirmWriter" />




    <!-- 固定长格式文件的写 -->
    <bean:bean id="fixedLengthWriter"
               class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <bean:property name="resource"
                       value="file:#{jobParameters['outputFilePath']}" />
        <bean:property name="lineAggregator">
            <bean:bean
                    class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
                <bean:property name="fieldExtractor">
                    <bean:bean
                            class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <bean:property name="names" value="ID,name,age,score" />
                    </bean:bean>
                </bean:property>
                <bean:property name="format" value="%-9s%-20s%3d%-2.0f" />
            </bean:bean>
        </bean:property>
    </bean:bean>
</bean:beans>